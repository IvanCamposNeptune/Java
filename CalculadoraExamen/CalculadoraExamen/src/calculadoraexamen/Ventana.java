/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadoraexamen;

/**
 *
 * @author PROPIETARIO
 */
public class Ventana extends javax.swing.JFrame {
     
                    
    int acumulador;
    int num1,numerOrig, resultado;
    int operacion ;
    int vector[];
    
    public Ventana() {
        vector=new int[4];
        vector[0]=0;
        vector[1]=0;
        initComponents();
        
        
        

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Numero = new javax.swing.JTextField();
        Decimal = new javax.swing.JButton();
        Hexadecimal = new javax.swing.JButton();
        Octal = new javax.swing.JButton();
        Binario = new javax.swing.JButton();
        Suma = new javax.swing.JButton();
        Resta = new javax.swing.JButton();
        Multiplicacion = new javax.swing.JButton();
        Division = new javax.swing.JButton();
        Igual = new javax.swing.JButton();
        Nuevo = new javax.swing.JButton();
        Salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);

        Numero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroActionPerformed(evt);
            }
        });

        Decimal.setText("Decimal");
        Decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecimalActionPerformed(evt);
            }
        });

        Hexadecimal.setText("Hexadecimal");
        Hexadecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HexadecimalActionPerformed(evt);
            }
        });

        Octal.setText("Octal");
        Octal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OctalActionPerformed(evt);
            }
        });

        Binario.setText("Binario");
        Binario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinarioActionPerformed(evt);
            }
        });

        Suma.setText("+");
        Suma.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                SumaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumaActionPerformed(evt);
            }
        });

        Resta.setText("-");
        Resta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestaActionPerformed(evt);
            }
        });

        Multiplicacion.setText("x");
        Multiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplicacionActionPerformed(evt);
            }
        });

        Division.setText("รท");
        Division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivisionActionPerformed(evt);
            }
        });

        Igual.setText("=");
        Igual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IgualActionPerformed(evt);
            }
        });

        Nuevo.setText("Nuevo");
        Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoActionPerformed(evt);
            }
        });

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Decimal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Hexadecimal)
                        .addGap(14, 14, 14)
                        .addComponent(Octal)
                        .addGap(18, 18, 18)
                        .addComponent(Binario)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Suma, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(Resta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(Multiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(Division, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(Salir)))
                        .addGap(33, 33, 33)
                        .addComponent(Igual, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(Numero, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(Numero, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Decimal)
                    .addComponent(Hexadecimal)
                    .addComponent(Octal)
                    .addComponent(Binario))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Suma, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Resta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Multiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Division, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Igual, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(Salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecimalActionPerformed
        
        
        
        
        
         if(numerOrig != 0)
        {
            Numero.setText(String.valueOf(numerOrig));
        }
        else
        {
            int b = Integer.parseInt(Numero.getText());
        Numero.setText(String.valueOf(b));             
        }
        
    }//GEN-LAST:event_DecimalActionPerformed


    
    
    
    private void SumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumaActionPerformed
       
        operacion=1;
      
            if(vector[0] != 0)
            {
               
            vector[1] = vector[0] + Integer.parseInt(Numero.getText());
             resultado = vector[1];
            this.Numero.setText("");  
            vector[0]=0;
            }
            else
            {
                if(vector[1]!=0)    
                {
                    vector[0] = vector[1] + Integer.parseInt(Numero.getText());
                    resultado = vector[0];
            this.Numero.setText(""); 
            vector[1]=0;
                }
                else
                {
                     vector[0] = vector[0] + Integer.parseInt(Numero.getText());
                     resultado = vector[0];
            this.Numero.setText("");  
                }
                
            
            
                
            }
            
        
    }//GEN-LAST:event_SumaActionPerformed

    private void RestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestaActionPerformed
        // TODO add your handling code here:
          operacion=2;
          if(vector[0] != 0)
            {
            vector[1] = vector[0] - Integer.parseInt(Numero.getText());
            this.Numero.setText("");  
            vector[0]=0;
            }
            else
            {
                if(vector[1]!=0)    
                {
                    vector[0] = vector[1] - Integer.parseInt(Numero.getText());
            this.Numero.setText(""); 
            vector[1]=0;
                }
                else
                {
                     vector[0] = vector[0] + Integer.parseInt(Numero.getText());
            this.Numero.setText("");  
            vector[1]=0;
                }
                
            
            
                
            }
    }//GEN-LAST:event_RestaActionPerformed

    private void MultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplicacionActionPerformed
        // TODO add your handling code here:
          operacion=3;
          if(num1==0){
        num1 = Integer.parseInt(Numero.getText());
         this.Numero.setText("");
        }else{
            num1 = num1 * Integer.parseInt(Numero.getText());
            this.Numero.setText("");
        }
    }//GEN-LAST:event_MultiplicacionActionPerformed

    private void DivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivisionActionPerformed
        // TODO add your handling code here:
          operacion=4;
          if(num1==0){
        num1 = Integer.parseInt(Numero.getText());
         this.Numero.setText("");
         
        }else{
            num1 = num1 / Integer.parseInt(Numero.getText());
            this.Numero.setText("");
            Numero.setText(String.valueOf(num1));
        }
    }//GEN-LAST:event_DivisionActionPerformed

    private void IgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IgualActionPerformed
        // TODO add your handling code here:
        switch(operacion){
            case 1:
                
                 Numero.setText(String.valueOf(resultado));
                 resultado = 0;
          
                
         break;
         
            case 2:     if(vector[0]!=0)
            {
            Numero.setText(String.valueOf(vector[0]));
            }
            else
            {
               Numero.setText(String.valueOf(vector[1]));

            }
         break;
         
            case 3: acumulador = Integer.parseInt(Numero.getText()) * num1;
         Numero.setText(String.valueOf(acumulador));
         break;
         
            case 4: acumulador = Integer.parseInt(Numero.getText()) / num1;
         Numero.setText(String.valueOf(acumulador));
         break;
         
            default: 
                break;
        }
        
    }//GEN-LAST:event_IgualActionPerformed

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed
       CalculadoraExamen.main (null);

    }//GEN-LAST:event_NuevoActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
       System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    private void HexadecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HexadecimalActionPerformed
           
        if(numerOrig != 0)
        {
            int b = numerOrig;
        String bin=Integer.toHexString(b);
            Numero.setText(String.valueOf(bin));
        }
        else
        {
            int b = Integer.parseInt(Numero.getText());
         numerOrig = b;
            String bin=Integer.toHexString(b);
       
        Numero.setText(String.valueOf(bin));             
        }

    }//GEN-LAST:event_HexadecimalActionPerformed

    private void OctalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OctalActionPerformed
        
      if(numerOrig != 0)
        {
            int b = numerOrig;
            String bin=Integer.toOctalString(b);
            Numero.setText(String.valueOf(bin));
        }
        else
        {
            int b = Integer.parseInt(Numero.getText());
            numerOrig = b;
            String bin=Integer.toOctalString(b);
        Numero.setText(String.valueOf(bin));             
        }
        
    }//GEN-LAST:event_OctalActionPerformed

    private void BinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinarioActionPerformed
      
        
   if(numerOrig != 0)
        {
            int b = numerOrig;
            String bin=Integer.toBinaryString(b);
            Numero.setText(String.valueOf(bin));
        }
        else
        {
           int b = Integer.parseInt(Numero.getText());
           numerOrig = b; 
           String bin=Integer.toBinaryString(b);            
        Numero.setText(String.valueOf(bin));             
        } 
        
    }//GEN-LAST:event_BinarioActionPerformed

    private void SumaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_SumaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_SumaAncestorAdded

    private void NumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumeroActionPerformed

   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    
            
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Binario;
    private javax.swing.JButton Decimal;
    private javax.swing.JButton Division;
    private javax.swing.JButton Hexadecimal;
    private javax.swing.JButton Igual;
    private javax.swing.JButton Multiplicacion;
    private javax.swing.JButton Nuevo;
    private javax.swing.JTextField Numero;
    private javax.swing.JButton Octal;
    private javax.swing.JButton Resta;
    private javax.swing.JButton Salir;
    private javax.swing.JButton Suma;
    // End of variables declaration//GEN-END:variables
}
